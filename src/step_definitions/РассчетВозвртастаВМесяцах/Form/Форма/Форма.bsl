//начало текста модуля

///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ДатаРождения(Парам01)","ДатаРождения","Допустим дата рождения 01.01.2000");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВозврастСотрудникаВМесяцах(Парам01)","ВозврастСотрудникаВМесяцах","Тогда возвраст сотрудника в месяцах 201");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции



///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры



///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//Допустим дата рождения 01.01.2000
//@ДатаРождения(Парам01)
Процедура ДатаРождения(датаРождения) Экспорт
	Контекст.Вставить("датаРождения",датаРождения);
КонецПроцедуры

&НаКлиенте
//Тогда возвраст сотрудника в месяцах 201
//@ВозврастСотрудникаВМесяцах(Парам01)
Процедура ВозврастСотрудникаВМесяцах(ОжидаемыйРезультат) Экспорт
	Результат  = ПолучитьВозврастВМесяцах(Контекст.датаРождения);
	Если НЕ Результат = ОжидаемыйРезультат Тогда 
		ВызватьИсключение "Кривой результат";
	КонецЕсли;
	
	
КонецПроцедуры

&НаСервере
Функция ПолучитьВозврастВМесяцах(датаРождения) 
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РАЗНОСТЬДАТ(&ДатаРождения, &ТекДата, МЕСЯЦ) КАК Вмесяцах";
	
	Запрос.УстановитьПараметр("ДатаРождения", ДатаРождения);
	Запрос.УстановитьПараметр("ТекДата", ТекущаяДата());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если  ВыборкаДетальныеЗаписи.Следующий()Тогда 		
		Возврат ВыборкаДетальныеЗаписи.Вмесяцах;
	КонецЕсли;
	
	

КонецФункции

	
	
	

//окончание текста модуля